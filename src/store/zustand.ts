import { create } from 'zustand';

export type LanguageSetting =
	| 'auto'
	| 'none'
	| '1c'
	| 'abnf'
	| 'accesslog'
	| 'actionscript'
	| 'ada'
	| 'angelscript'
	| 'apache'
	| 'applescript'
	| 'arcade'
	| 'arduino'
	| 'armasm'
	| 'xml'
	| 'asciidoc'
	| 'aspectj'
	| 'autohotkey'
	| 'autoit'
	| 'avrasm'
	| 'awk'
	| 'axapta'
	| 'bash'
	| 'basic'
	| 'bnf'
	| 'brainfuck'
	| 'c'
	| 'cal'
	| 'capnproto'
	| 'ceylon'
	| 'clean'
	| 'clojure'
	| 'clojure-repl'
	| 'cmake'
	| 'coffeescript'
	| 'coq'
	| 'cos'
	| 'cpp'
	| 'crmsh'
	| 'crystal'
	| 'csharp'
	| 'csp'
	| 'css'
	| 'd'
	| 'markdown'
	| 'dart'
	| 'delphi'
	| 'diff'
	| 'django'
	| 'dns'
	| 'dockerfile'
	| 'dos'
	| 'dsconfig'
	| 'dts'
	| 'dust'
	| 'ebnf'
	| 'elixir'
	| 'elm'
	| 'ruby'
	| 'erb'
	| 'erlang-repl'
	| 'erlang'
	| 'excel'
	| 'fix'
	| 'flix'
	| 'fortran'
	| 'fsharp'
	| 'gams'
	| 'gauss'
	| 'gcode'
	| 'gherkin'
	| 'glsl'
	| 'gml'
	| 'go'
	| 'golo'
	| 'gradle'
	| 'graphql'
	| 'groovy'
	| 'haml'
	| 'handlebars'
	| 'haskell'
	| 'haxe'
	| 'hsp'
	| 'http'
	| 'hy'
	| 'inform7'
	| 'ini'
	| 'irpf90'
	| 'isbl'
	| 'java'
	| 'javascript'
	| 'jboss-cli'
	| 'json'
	| 'julia'
	| 'julia-repl'
	| 'kotlin'
	| 'lasso'
	| 'latex'
	| 'ldif'
	| 'leaf'
	| 'less'
	| 'lisp'
	| 'livecodeserver'
	| 'livescript'
	| 'llvm'
	| 'lsl'
	| 'lua'
	| 'makefile'
	| 'mathematica'
	| 'matlab'
	| 'maxima'
	| 'mel'
	| 'mercury'
	| 'mipsasm'
	| 'mizar'
	| 'perl'
	| 'mojolicious'
	| 'monkey'
	| 'moonscript'
	| 'n1ql'
	| 'nestedtext'
	| 'nginx'
	| 'nim'
	| 'nix'
	| 'node-repl'
	| 'nsis'
	| 'objectivec'
	| 'ocaml'
	| 'openscad'
	| 'oxygene'
	| 'parser3'
	| 'pf'
	| 'pgsql'
	| 'php'
	| 'php-template'
	| 'plaintext'
	| 'pony'
	| 'powershell'
	| 'processing'
	| 'profile'
	| 'prolog'
	| 'properties'
	| 'protobuf'
	| 'puppet'
	| 'purebasic'
	| 'python'
	| 'python-repl'
	| 'q'
	| 'qml'
	| 'r'
	| 'reasonml'
	| 'rib'
	| 'roboconf'
	| 'routeros'
	| 'rsl'
	| 'ruleslanguage'
	| 'rust'
	| 'sas'
	| 'scala'
	| 'scheme'
	| 'scilab'
	| 'scss'
	| 'shell'
	| 'smali'
	| 'smalltalk'
	| 'sml'
	| 'sqf'
	| 'sql'
	| 'stan'
	| 'stata'
	| 'step21'
	| 'stylus'
	| 'subunit'
	| 'swift'
	| 'taggerscript'
	| 'yaml'
	| 'tap'
	| 'tcl'
	| 'thrift'
	| 'tp'
	| 'twig'
	| 'typescript'
	| 'vala'
	| 'vbnet'
	| 'vbscript'
	| 'vbscript-html'
	| 'verilog'
	| 'vhdl'
	| 'vim'
	| 'wasm'
	| 'wren'
	| 'x86asm'
	| 'xl'
	| 'xquery'
	| 'zephir';

export const paddingOptions = [16, 24, 32, 40, 48] as const;
export type PaddingSetting = typeof paddingOptions[number];

export interface SettingsState {
	padding: PaddingSetting;
	language: LanguageSetting;
	code: string;
	setPadding: (padding: SettingsState['padding']) => void;
	setLanguage: (language: SettingsState['language']) => void;
	setCode: (code: SettingsState['code']) => void;
}

export const useSettingsState = create<SettingsState>((set) => ({
	padding: 16,
	language: 'auto',
	code: '',
	setPadding: (padding: SettingsState['padding']) => set({ padding }),
	setLanguage: (language: SettingsState['language']) => set({ language }),
	setCode: (code: SettingsState['code']) => set({ code }),
}));
